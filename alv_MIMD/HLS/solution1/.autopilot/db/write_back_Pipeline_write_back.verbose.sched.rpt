

================================================================
== Vitis HLS Report for 'write_back_Pipeline_write_back'
================================================================
* Date:           Tue May 14 23:14:50 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        HLS
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- write_back  |        ?|        ?|         8|          1|          1|     ?|       yes|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [HLS/core.cpp:151]   --->   Operation 11 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem2, void @empty_10, i32 0, i32 0, void @empty_11, i32 0, i32 50, void @empty_15, void @empty_13, void @empty_11, i32 16, i32 16, i32 16, i32 16, void @empty_11, void @empty_11, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_result, void @empty_8, i32 0, i32 0, void @empty_11, i32 0, i32 0, void @empty_11, void @empty_11, void @empty_11, i32 0, i32 0, i32 0, i32 0, void @empty_11, void @empty_11, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%c_load_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %c_load" [HLS/core.cpp:152]   --->   Operation 14 'read' 'c_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln151 = store i64 0, i64 %i" [HLS/core.cpp:151]   --->   Operation 15 'store' 'store_ln151' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.cond.i"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.10>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%i_1 = load i64 %i" [HLS/core.cpp:155]   --->   Operation 17 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_i = nbreadreq i1 @_ssdm_op_NbReadReq.ap_fifo.i32P0A, i32 %data_result, i32 1" [HLS/core.cpp:152]   --->   Operation 18 'nbreadreq' 'tmp_i' <Predicate = true> <Delay = 0.00> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.58> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 50> <FIFO>
ST_2 : Operation 19 [1/1] (3.52ns)   --->   "%add_ln156 = add i64 %i_1, i64 1" [HLS/core.cpp:156]   --->   Operation 19 'add' 'add_ln156' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln152 = br i1 %tmp_i, void %write_back.exit.exitStub, void %while.body.i" [HLS/core.cpp:152]   --->   Operation 20 'br' 'br_ln152' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (3.58ns)   --->   "%data_result_read = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_result" [HLS/core.cpp:155]   --->   Operation 21 'read' 'data_result_read' <Predicate = (tmp_i)> <Delay = 3.58> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.58> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 50> <FIFO>
ST_2 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node add_ln155)   --->   "%shl_ln155 = shl i64 %i_1, i64 2" [HLS/core.cpp:155]   --->   Operation 22 'shl' 'shl_ln155' <Predicate = (tmp_i)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (3.52ns) (out node of the LUT)   --->   "%add_ln155 = add i64 %c_load_read, i64 %shl_ln155" [HLS/core.cpp:155]   --->   Operation 23 'add' 'add_ln155' <Predicate = (tmp_i)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln155, i32 2, i32 63" [HLS/core.cpp:155]   --->   Operation 24 'partselect' 'trunc_ln' <Predicate = (tmp_i)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%sext_ln155 = sext i62 %trunc_ln" [HLS/core.cpp:155]   --->   Operation 25 'sext' 'sext_ln155' <Predicate = (tmp_i)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%gmem2_addr = getelementptr i32 %gmem2, i64 %sext_ln155" [HLS/core.cpp:155]   --->   Operation 26 'getelementptr' 'gmem2_addr' <Predicate = (tmp_i)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln151 = store i64 %add_ln156, i64 %i" [HLS/core.cpp:151]   --->   Operation 27 'store' 'store_ln151' <Predicate = (tmp_i)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 28 [1/1] (7.30ns)   --->   "%gmem2_addr_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i32 %gmem2_addr, i32 1" [HLS/core.cpp:155]   --->   Operation 28 'writereq' 'gmem2_addr_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 29 [1/1] (7.30ns)   --->   "%write_ln155 = write void @_ssdm_op_Write.m_axi.volatile.i32P1A, i32 %gmem2_addr, i32 %data_result_read, i4 15" [HLS/core.cpp:155]   --->   Operation 29 'write' 'write_ln155' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 30 [5/5] (7.30ns)   --->   "%gmem2_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem2_addr" [HLS/core.cpp:155]   --->   Operation 30 'writeresp' 'gmem2_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 31 [4/5] (7.30ns)   --->   "%gmem2_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem2_addr" [HLS/core.cpp:155]   --->   Operation 31 'writeresp' 'gmem2_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 32 [3/5] (7.30ns)   --->   "%gmem2_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem2_addr" [HLS/core.cpp:155]   --->   Operation 32 'writeresp' 'gmem2_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 33 [2/5] (7.30ns)   --->   "%gmem2_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem2_addr" [HLS/core.cpp:155]   --->   Operation 33 'writeresp' 'gmem2_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 38 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 38 'ret' 'ret_ln0' <Predicate = (!tmp_i)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 34 [1/1] (0.00ns)   --->   "%specpipeline_ln154 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_11" [HLS/core.cpp:154]   --->   Operation 34 'specpipeline' 'specpipeline_ln154' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 35 [1/1] (0.00ns)   --->   "%specloopname_ln152 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [HLS/core.cpp:152]   --->   Operation 35 'specloopname' 'specloopname_ln152' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 36 [1/5] (7.30ns)   --->   "%gmem2_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem2_addr" [HLS/core.cpp:155]   --->   Operation 36 'writeresp' 'gmem2_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln152 = br void %while.cond.i" [HLS/core.cpp:152]   --->   Operation 37 'br' 'br_ln152' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation 64 bit ('i', HLS/core.cpp:151) [4]  (0.000 ns)
	'store' operation 0 bit ('store_ln151', HLS/core.cpp:151) of constant 0 on local variable 'i', HLS/core.cpp:151 [8]  (1.588 ns)

 <State 2>: 5.108ns
The critical path consists of the following:
	'load' operation 64 bit ('i', HLS/core.cpp:155) on local variable 'i', HLS/core.cpp:151 [11]  (0.000 ns)
	'add' operation 64 bit ('add_ln156', HLS/core.cpp:156) [13]  (3.520 ns)
	'store' operation 0 bit ('store_ln151', HLS/core.cpp:151) of variable 'add_ln156', HLS/core.cpp:156 on local variable 'i', HLS/core.cpp:151 [27]  (1.588 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem2_addr_req', HLS/core.cpp:155) on port 'gmem2' (HLS/core.cpp:155) [24]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln155', HLS/core.cpp:155) on port 'gmem2' (HLS/core.cpp:155) [25]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem2_addr_resp', HLS/core.cpp:155) on port 'gmem2' (HLS/core.cpp:155) [26]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem2_addr_resp', HLS/core.cpp:155) on port 'gmem2' (HLS/core.cpp:155) [26]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem2_addr_resp', HLS/core.cpp:155) on port 'gmem2' (HLS/core.cpp:155) [26]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem2_addr_resp', HLS/core.cpp:155) on port 'gmem2' (HLS/core.cpp:155) [26]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus response operation ('gmem2_addr_resp', HLS/core.cpp:155) on port 'gmem2' (HLS/core.cpp:155) [26]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
