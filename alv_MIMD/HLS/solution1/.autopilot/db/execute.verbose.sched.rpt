

================================================================
== Vitis HLS Report for 'execute'
================================================================
* Date:           Sun May 12 19:57:49 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        HLS
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       90|       90|  0.900 us|  0.900 us|   90|   90|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- exe     |       88|       88|        40|          1|          1|    50|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 40


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 40
* Pipeline : 1
  Pipeline-0 : II = 1, D = 40, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [HLS/core.cpp:82]   --->   Operation 43 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %ALU_operation, void @empty_15, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 44 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_result, void @empty_15, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 45 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_b, void @empty_15, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 46 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_a, void @empty_15, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 47 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln82 = store i6 0, i6 %i" [HLS/core.cpp:82]   --->   Operation 48 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln82 = br void %for.body" [HLS/core.cpp:82]   --->   Operation 49 'br' 'br_ln82' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%i_1 = load i6 %i" [HLS/core.cpp:82]   --->   Operation 50 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (1.82ns)   --->   "%icmp_ln82 = icmp_eq  i6 %i_1, i6 50" [HLS/core.cpp:82]   --->   Operation 51 'icmp' 'icmp_ln82' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (1.82ns)   --->   "%i_2 = add i6 %i_1, i6 1" [HLS/core.cpp:82]   --->   Operation 52 'add' 'i_2' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln82 = br i1 %icmp_ln82, void %for.body.split, void %for.end" [HLS/core.cpp:82]   --->   Operation 53 'br' 'br_ln82' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (1.58ns)   --->   "%store_ln82 = store i6 %i_2, i6 %i" [HLS/core.cpp:82]   --->   Operation 54 'store' 'store_ln82' <Predicate = (!icmp_ln82)> <Delay = 1.58>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln82 = br void %for.body" [HLS/core.cpp:82]   --->   Operation 55 'br' 'br_ln82' <Predicate = (!icmp_ln82)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.87>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%specpipeline_ln84 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [HLS/core.cpp:84]   --->   Operation 56 'specpipeline' 'specpipeline_ln84' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%speclooptripcount_ln82 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 50, i64 50, i64 50" [HLS/core.cpp:82]   --->   Operation 57 'speclooptripcount' 'speclooptripcount_ln82' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%specloopname_ln82 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [HLS/core.cpp:82]   --->   Operation 58 'specloopname' 'specloopname_ln82' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (3.63ns)   --->   "%ALU_operation_read = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %ALU_operation" [HLS/core.cpp:86]   --->   Operation 59 'read' 'ALU_operation_read' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_2 : Operation 60 [1/1] (2.23ns)   --->   "%switch_ln86 = switch i32 %ALU_operation_read, void %sw.default, i32 0, void %sw.bb, i32 1, void %sw.bb2, i32 2, void %sw.bb6, i32 3, void %sw.bb9, i32 4, void %sw.bb13, i32 5, void %sw.bb16, i32 6, void %sw.bb20, i32 7, void %sw.bb25, i32 8, void %sw.bb29, i32 9, void %sw.bb34" [HLS/core.cpp:86]   --->   Operation 60 'switch' 'switch_ln86' <Predicate = true> <Delay = 2.23>

State 3 <SV = 2> <Delay = 6.18>
ST_3 : Operation 61 [1/1] (3.63ns)   --->   "%data_a_read_6 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [HLS/core.cpp:126]   --->   Operation 61 'read' 'data_a_read_6' <Predicate = (ALU_operation_read == 9)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 62 [1/1] (3.63ns)   --->   "%data_b_read_6 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [HLS/core.cpp:126]   --->   Operation 62 'read' 'data_b_read_6' <Predicate = (ALU_operation_read == 9)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 63 [1/1] (3.63ns)   --->   "%data_a_read_5 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [HLS/core.cpp:122]   --->   Operation 63 'read' 'data_a_read_5' <Predicate = (ALU_operation_read == 8)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 64 [1/1] (3.63ns)   --->   "%data_b_read_5 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [HLS/core.cpp:122]   --->   Operation 64 'read' 'data_b_read_5' <Predicate = (ALU_operation_read == 8)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 65 [1/1] (3.63ns)   --->   "%data_a_read_4 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [HLS/core.cpp:118]   --->   Operation 65 'read' 'data_a_read_4' <Predicate = (ALU_operation_read == 7)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 66 [1/1] (3.63ns)   --->   "%data_b_read_4 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [HLS/core.cpp:118]   --->   Operation 66 'read' 'data_b_read_4' <Predicate = (ALU_operation_read == 7)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 67 [1/1] (2.55ns)   --->   "%sub_ln118 = sub i32 %data_a_read_4, i32 %data_b_read_4" [HLS/core.cpp:118]   --->   Operation 67 'sub' 'sub_ln118' <Predicate = (ALU_operation_read == 7)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (3.63ns)   --->   "%data_a_read_3 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [HLS/core.cpp:114]   --->   Operation 68 'read' 'data_a_read_3' <Predicate = (ALU_operation_read == 6)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 69 [1/1] (3.63ns)   --->   "%data_b_read_3 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [HLS/core.cpp:114]   --->   Operation 69 'read' 'data_b_read_3' <Predicate = (ALU_operation_read == 6)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 70 [1/1] (2.55ns)   --->   "%add_ln114 = add i32 %data_b_read_3, i32 %data_a_read_3" [HLS/core.cpp:114]   --->   Operation 70 'add' 'add_ln114' <Predicate = (ALU_operation_read == 6)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (3.63ns)   --->   "%data_b_read_2 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [HLS/core.cpp:110]   --->   Operation 71 'read' 'data_b_read_2' <Predicate = (ALU_operation_read == 5)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %data_b_read_2, i32 31" [HLS/core.cpp:110]   --->   Operation 72 'bitselect' 'tmp_1' <Predicate = (ALU_operation_read == 5)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (2.55ns)   --->   "%sub_ln110 = sub i32 0, i32 %data_b_read_2" [HLS/core.cpp:110]   --->   Operation 73 'sub' 'sub_ln110' <Predicate = (ALU_operation_read == 5)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%lshr_ln110_1 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %sub_ln110, i32 1, i32 31" [HLS/core.cpp:110]   --->   Operation 74 'partselect' 'lshr_ln110_1' <Predicate = (ALU_operation_read == 5)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%lshr_ln110_2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %data_b_read_2, i32 1, i32 31" [HLS/core.cpp:110]   --->   Operation 75 'partselect' 'lshr_ln110_2' <Predicate = (ALU_operation_read == 5)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (3.63ns)   --->   "%data_a_read_2 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [HLS/core.cpp:106]   --->   Operation 76 'read' 'data_a_read_2' <Predicate = (ALU_operation_read == 4)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %data_a_read_2, i32 31" [HLS/core.cpp:106]   --->   Operation 77 'bitselect' 'tmp' <Predicate = (ALU_operation_read == 4)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (2.55ns)   --->   "%sub_ln106 = sub i32 0, i32 %data_a_read_2" [HLS/core.cpp:106]   --->   Operation 78 'sub' 'sub_ln106' <Predicate = (ALU_operation_read == 4)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%lshr_ln106_1 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %sub_ln106, i32 1, i32 31" [HLS/core.cpp:106]   --->   Operation 79 'partselect' 'lshr_ln106_1' <Predicate = (ALU_operation_read == 4)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%lshr_ln106_2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %data_a_read_2, i32 1, i32 31" [HLS/core.cpp:106]   --->   Operation 80 'partselect' 'lshr_ln106_2' <Predicate = (ALU_operation_read == 4)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (3.63ns)   --->   "%data_b_read_1 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [HLS/core.cpp:102]   --->   Operation 81 'read' 'data_b_read_1' <Predicate = (ALU_operation_read == 3)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 82 [1/1] (3.63ns)   --->   "%data_a_read_1 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [HLS/core.cpp:98]   --->   Operation 82 'read' 'data_a_read_1' <Predicate = (ALU_operation_read == 2)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 83 [1/1] (3.63ns)   --->   "%data_b_read = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [HLS/core.cpp:94]   --->   Operation 83 'read' 'data_b_read' <Predicate = (ALU_operation_read == 1)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 84 [1/1] (3.63ns)   --->   "%data_a_read = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [HLS/core.cpp:90]   --->   Operation 84 'read' 'data_a_read' <Predicate = (ALU_operation_read == 0)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 85 [36/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 85 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [2/2] (6.91ns)   --->   "%mul_ln122 = mul i32 %data_b_read_5, i32 %data_a_read_5" [HLS/core.cpp:122]   --->   Operation 86 'mul' 'mul_ln122' <Predicate = (ALU_operation_read == 8)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i31 %lshr_ln110_1" [HLS/core.cpp:110]   --->   Operation 87 'zext' 'zext_ln110' <Predicate = (ALU_operation_read == 5 & tmp_1)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (2.52ns)   --->   "%sub_ln110_1 = sub i32 0, i32 %zext_ln110" [HLS/core.cpp:110]   --->   Operation 88 'sub' 'sub_ln110_1' <Predicate = (ALU_operation_read == 5 & tmp_1)> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln110_1 = zext i31 %lshr_ln110_2" [HLS/core.cpp:110]   --->   Operation 89 'zext' 'zext_ln110_1' <Predicate = (ALU_operation_read == 5 & !tmp_1)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.69ns)   --->   "%select_ln110 = select i1 %tmp_1, i32 %sub_ln110_1, i32 %zext_ln110_1" [HLS/core.cpp:110]   --->   Operation 90 'select' 'select_ln110' <Predicate = (ALU_operation_read == 5)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i31 %lshr_ln106_1" [HLS/core.cpp:106]   --->   Operation 91 'zext' 'zext_ln106' <Predicate = (ALU_operation_read == 4 & tmp)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (2.52ns)   --->   "%sub_ln106_1 = sub i32 0, i32 %zext_ln106" [HLS/core.cpp:106]   --->   Operation 92 'sub' 'sub_ln106_1' <Predicate = (ALU_operation_read == 4 & tmp)> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln106_1 = zext i31 %lshr_ln106_2" [HLS/core.cpp:106]   --->   Operation 93 'zext' 'zext_ln106_1' <Predicate = (ALU_operation_read == 4 & !tmp)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.69ns)   --->   "%select_ln106 = select i1 %tmp, i32 %sub_ln106_1, i32 %zext_ln106_1" [HLS/core.cpp:106]   --->   Operation 94 'select' 'select_ln106' <Predicate = (ALU_operation_read == 4)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.91>
ST_5 : Operation 95 [35/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 95 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/2] (6.91ns)   --->   "%mul_ln122 = mul i32 %data_b_read_5, i32 %data_a_read_5" [HLS/core.cpp:122]   --->   Operation 96 'mul' 'mul_ln122' <Predicate = (ALU_operation_read == 8)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.33>
ST_6 : Operation 97 [34/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 97 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.33>
ST_7 : Operation 98 [33/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 98 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.33>
ST_8 : Operation 99 [32/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 99 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 4.33>
ST_9 : Operation 100 [31/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 100 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 4.33>
ST_10 : Operation 101 [30/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 101 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.33>
ST_11 : Operation 102 [29/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 102 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 4.33>
ST_12 : Operation 103 [28/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 103 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 4.33>
ST_13 : Operation 104 [27/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 104 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 4.33>
ST_14 : Operation 105 [26/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 105 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.33>
ST_15 : Operation 106 [25/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 106 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 4.33>
ST_16 : Operation 107 [24/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 107 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 4.33>
ST_17 : Operation 108 [23/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 108 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 4.33>
ST_18 : Operation 109 [22/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 109 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 4.33>
ST_19 : Operation 110 [21/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 110 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 4.33>
ST_20 : Operation 111 [20/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 111 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 4.33>
ST_21 : Operation 112 [19/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 112 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.33>
ST_22 : Operation 113 [18/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 113 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 4.33>
ST_23 : Operation 114 [17/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 114 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 4.33>
ST_24 : Operation 115 [16/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 115 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 4.33>
ST_25 : Operation 116 [15/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 116 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 4.33>
ST_26 : Operation 117 [14/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 117 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 4.33>
ST_27 : Operation 118 [13/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 118 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 4.33>
ST_28 : Operation 119 [12/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 119 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 4.33>
ST_29 : Operation 120 [11/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 120 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 4.33>
ST_30 : Operation 121 [10/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 121 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 4.33>
ST_31 : Operation 122 [9/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 122 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 4.33>
ST_32 : Operation 123 [8/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 123 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 4.33>
ST_33 : Operation 124 [7/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 124 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 4.33>
ST_34 : Operation 125 [6/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 125 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 4.33>
ST_35 : Operation 126 [5/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 126 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 4.33>
ST_36 : Operation 127 [4/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 127 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 4.33>
ST_37 : Operation 128 [3/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 128 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 4.33>
ST_38 : Operation 129 [2/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 129 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 4.33>
ST_39 : Operation 130 [1/36] (4.33ns)   --->   "%sdiv_ln126 = sdiv i32 %data_a_read_6, i32 %data_b_read_6" [HLS/core.cpp:126]   --->   Operation 130 'sdiv' 'sdiv_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 157 [1/1] (0.00ns)   --->   "%ret_ln134 = ret" [HLS/core.cpp:134]   --->   Operation 157 'ret' 'ret_ln134' <Predicate = (icmp_ln82)> <Delay = 0.00>

State 40 <SV = 39> <Delay = 6.18>
ST_40 : Operation 131 [1/1] (3.63ns)   --->   "%write_ln126 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %sdiv_ln126" [HLS/core.cpp:126]   --->   Operation 131 'write' 'write_ln126' <Predicate = (ALU_operation_read == 9)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 132 [1/1] (0.00ns)   --->   "%br_ln127 = br void %for.inc" [HLS/core.cpp:127]   --->   Operation 132 'br' 'br_ln127' <Predicate = (ALU_operation_read == 9)> <Delay = 0.00>
ST_40 : Operation 133 [1/1] (3.63ns)   --->   "%write_ln122 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %mul_ln122" [HLS/core.cpp:122]   --->   Operation 133 'write' 'write_ln122' <Predicate = (ALU_operation_read == 8)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 134 [1/1] (0.00ns)   --->   "%br_ln123 = br void %for.inc" [HLS/core.cpp:123]   --->   Operation 134 'br' 'br_ln123' <Predicate = (ALU_operation_read == 8)> <Delay = 0.00>
ST_40 : Operation 135 [1/1] (3.63ns)   --->   "%write_ln118 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %sub_ln118" [HLS/core.cpp:118]   --->   Operation 135 'write' 'write_ln118' <Predicate = (ALU_operation_read == 7)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 136 [1/1] (0.00ns)   --->   "%br_ln119 = br void %for.inc" [HLS/core.cpp:119]   --->   Operation 136 'br' 'br_ln119' <Predicate = (ALU_operation_read == 7)> <Delay = 0.00>
ST_40 : Operation 137 [1/1] (3.63ns)   --->   "%write_ln114 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %add_ln114" [HLS/core.cpp:114]   --->   Operation 137 'write' 'write_ln114' <Predicate = (ALU_operation_read == 6)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 138 [1/1] (0.00ns)   --->   "%br_ln115 = br void %for.inc" [HLS/core.cpp:115]   --->   Operation 138 'br' 'br_ln115' <Predicate = (ALU_operation_read == 6)> <Delay = 0.00>
ST_40 : Operation 139 [1/1] (3.63ns)   --->   "%write_ln110 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %select_ln110" [HLS/core.cpp:110]   --->   Operation 139 'write' 'write_ln110' <Predicate = (ALU_operation_read == 5)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln111 = br void %for.inc" [HLS/core.cpp:111]   --->   Operation 140 'br' 'br_ln111' <Predicate = (ALU_operation_read == 5)> <Delay = 0.00>
ST_40 : Operation 141 [1/1] (3.63ns)   --->   "%write_ln106 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %select_ln106" [HLS/core.cpp:106]   --->   Operation 141 'write' 'write_ln106' <Predicate = (ALU_operation_read == 4)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 142 [1/1] (0.00ns)   --->   "%br_ln107 = br void %for.inc" [HLS/core.cpp:107]   --->   Operation 142 'br' 'br_ln107' <Predicate = (ALU_operation_read == 4)> <Delay = 0.00>
ST_40 : Operation 143 [1/1] (0.00ns)   --->   "%shl_ln102 = shl i32 %data_b_read_1, i32 1" [HLS/core.cpp:102]   --->   Operation 143 'shl' 'shl_ln102' <Predicate = (ALU_operation_read == 3)> <Delay = 0.00>
ST_40 : Operation 144 [1/1] (3.63ns)   --->   "%write_ln102 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %shl_ln102" [HLS/core.cpp:102]   --->   Operation 144 'write' 'write_ln102' <Predicate = (ALU_operation_read == 3)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 145 [1/1] (0.00ns)   --->   "%br_ln103 = br void %for.inc" [HLS/core.cpp:103]   --->   Operation 145 'br' 'br_ln103' <Predicate = (ALU_operation_read == 3)> <Delay = 0.00>
ST_40 : Operation 146 [1/1] (0.00ns)   --->   "%shl_ln98 = shl i32 %data_a_read_1, i32 1" [HLS/core.cpp:98]   --->   Operation 146 'shl' 'shl_ln98' <Predicate = (ALU_operation_read == 2)> <Delay = 0.00>
ST_40 : Operation 147 [1/1] (3.63ns)   --->   "%write_ln98 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %shl_ln98" [HLS/core.cpp:98]   --->   Operation 147 'write' 'write_ln98' <Predicate = (ALU_operation_read == 2)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 148 [1/1] (0.00ns)   --->   "%br_ln99 = br void %for.inc" [HLS/core.cpp:99]   --->   Operation 148 'br' 'br_ln99' <Predicate = (ALU_operation_read == 2)> <Delay = 0.00>
ST_40 : Operation 149 [1/1] (2.55ns)   --->   "%add_ln94 = add i32 %data_b_read, i32 27" [HLS/core.cpp:94]   --->   Operation 149 'add' 'add_ln94' <Predicate = (ALU_operation_read == 1)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 150 [1/1] (3.63ns)   --->   "%write_ln94 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %add_ln94" [HLS/core.cpp:94]   --->   Operation 150 'write' 'write_ln94' <Predicate = (ALU_operation_read == 1)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 151 [1/1] (0.00ns)   --->   "%br_ln95 = br void %for.inc" [HLS/core.cpp:95]   --->   Operation 151 'br' 'br_ln95' <Predicate = (ALU_operation_read == 1)> <Delay = 0.00>
ST_40 : Operation 152 [1/1] (2.55ns)   --->   "%add_ln90 = add i32 %data_a_read, i32 27" [HLS/core.cpp:90]   --->   Operation 152 'add' 'add_ln90' <Predicate = (ALU_operation_read == 0)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 153 [1/1] (3.63ns)   --->   "%write_ln90 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %add_ln90" [HLS/core.cpp:90]   --->   Operation 153 'write' 'write_ln90' <Predicate = (ALU_operation_read == 0)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 154 [1/1] (0.00ns)   --->   "%br_ln91 = br void %for.inc" [HLS/core.cpp:91]   --->   Operation 154 'br' 'br_ln91' <Predicate = (ALU_operation_read == 0)> <Delay = 0.00>
ST_40 : Operation 155 [1/1] (3.63ns)   --->   "%write_ln131 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 0" [HLS/core.cpp:131]   --->   Operation 155 'write' 'write_ln131' <Predicate = (ALU_operation_read != 0 & ALU_operation_read != 1 & ALU_operation_read != 2 & ALU_operation_read != 3 & ALU_operation_read != 4 & ALU_operation_read != 5 & ALU_operation_read != 6 & ALU_operation_read != 7 & ALU_operation_read != 8 & ALU_operation_read != 9)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_40 : Operation 156 [1/1] (0.00ns)   --->   "%br_ln132 = br void %for.inc" [HLS/core.cpp:132]   --->   Operation 156 'br' 'br_ln132' <Predicate = (ALU_operation_read != 0 & ALU_operation_read != 1 & ALU_operation_read != 2 & ALU_operation_read != 3 & ALU_operation_read != 4 & ALU_operation_read != 5 & ALU_operation_read != 6 & ALU_operation_read != 7 & ALU_operation_read != 8 & ALU_operation_read != 9)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.001ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln82', HLS/core.cpp:82) of constant 0 on local variable 'i', HLS/core.cpp:82 [10]  (1.588 ns)
	'load' operation 6 bit ('i', HLS/core.cpp:82) on local variable 'i', HLS/core.cpp:82 [13]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln82', HLS/core.cpp:82) [14]  (1.825 ns)
	'store' operation 0 bit ('store_ln82', HLS/core.cpp:82) of variable 'i', HLS/core.cpp:82 on local variable 'i', HLS/core.cpp:82 [95]  (1.588 ns)

 <State 2>: 5.870ns
The critical path consists of the following:
	fifo read operation ('ALU_operation_read', HLS/core.cpp:86) on port 'ALU_operation' (HLS/core.cpp:86) [21]  (3.634 ns)
	blocking operation 2.2365 ns on control path)

 <State 3>: 6.186ns
The critical path consists of the following:
	fifo read operation ('data_a_read_4', HLS/core.cpp:118) on port 'data_a' (HLS/core.cpp:118) [36]  (3.634 ns)
	'sub' operation 32 bit ('sub_ln118', HLS/core.cpp:118) [38]  (2.552 ns)

 <State 4>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln122', HLS/core.cpp:122) [32]  (6.912 ns)

 <State 5>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln122', HLS/core.cpp:122) [32]  (6.912 ns)

 <State 6>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 7>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 8>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 9>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 10>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 11>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 12>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 13>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 14>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 15>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 16>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 17>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 18>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 19>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 20>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 21>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 22>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 23>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 24>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 25>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 26>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 27>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 28>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 29>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 30>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 31>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 32>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 33>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 34>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 35>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 36>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 37>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 38>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 39>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln126', HLS/core.cpp:126) [26]  (4.336 ns)

 <State 40>: 6.186ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln90', HLS/core.cpp:90) [88]  (2.552 ns)
	fifo write operation ('write_ln90', HLS/core.cpp:90) on port 'data_result' (HLS/core.cpp:90) [89]  (3.634 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
