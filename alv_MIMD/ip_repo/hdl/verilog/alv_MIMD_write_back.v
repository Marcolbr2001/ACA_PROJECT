// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module alv_MIMD_write_back (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RFIFONUM,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        c_dout,
        c_num_data_valid,
        c_fifo_cap,
        c_empty_n,
        c_read,
        data_result_dout,
        data_result_num_data_valid,
        data_result_fifo_cap,
        data_result_empty_n,
        data_result_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [63:0] m_axi_gmem2_AWADDR;
output  [0:0] m_axi_gmem2_AWID;
output  [31:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [0:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [31:0] m_axi_gmem2_WDATA;
output  [3:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [0:0] m_axi_gmem2_WID;
output  [0:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [63:0] m_axi_gmem2_ARADDR;
output  [0:0] m_axi_gmem2_ARID;
output  [31:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [0:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [31:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [0:0] m_axi_gmem2_RID;
input  [8:0] m_axi_gmem2_RFIFONUM;
input  [0:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [0:0] m_axi_gmem2_BID;
input  [0:0] m_axi_gmem2_BUSER;
input  [63:0] c_dout;
input  [2:0] c_num_data_valid;
input  [2:0] c_fifo_cap;
input   c_empty_n;
output   c_read;
input  [31:0] data_result_dout;
input  [6:0] data_result_num_data_valid;
input  [6:0] data_result_fifo_cap;
input   data_result_empty_n;
output   data_result_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem2_AWVALID;
reg m_axi_gmem2_WVALID;
reg m_axi_gmem2_BREADY;
reg c_read;
reg data_result_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    c_blk_n;
reg   [63:0] c_read_reg_55;
reg    ap_block_state1;
wire    grp_write_back_Pipeline_write_back_fu_46_ap_start;
wire    grp_write_back_Pipeline_write_back_fu_46_ap_done;
wire    grp_write_back_Pipeline_write_back_fu_46_ap_idle;
wire    grp_write_back_Pipeline_write_back_fu_46_ap_ready;
wire    grp_write_back_Pipeline_write_back_fu_46_data_result_read;
wire    grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWVALID;
wire   [63:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWADDR;
wire   [0:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWID;
wire   [31:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWLEN;
wire   [2:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWSIZE;
wire   [1:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWBURST;
wire   [1:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWLOCK;
wire   [3:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWCACHE;
wire   [2:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWPROT;
wire   [3:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWQOS;
wire   [3:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWREGION;
wire   [0:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWUSER;
wire    grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WVALID;
wire   [31:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WDATA;
wire   [3:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WSTRB;
wire    grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WLAST;
wire   [0:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WID;
wire   [0:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WUSER;
wire    grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARVALID;
wire   [63:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARADDR;
wire   [0:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARID;
wire   [31:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARLEN;
wire   [2:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARSIZE;
wire   [1:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARBURST;
wire   [1:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARLOCK;
wire   [3:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARCACHE;
wire   [2:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARPROT;
wire   [3:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARQOS;
wire   [3:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARREGION;
wire   [0:0] grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARUSER;
wire    grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_RREADY;
wire    grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_BREADY;
reg    grp_write_back_Pipeline_write_back_fu_46_ap_start_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_NS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state2;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_write_back_Pipeline_write_back_fu_46_ap_start_reg = 1'b0;
end

alv_MIMD_write_back_Pipeline_write_back grp_write_back_Pipeline_write_back_fu_46(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_write_back_Pipeline_write_back_fu_46_ap_start),
    .ap_done(grp_write_back_Pipeline_write_back_fu_46_ap_done),
    .ap_idle(grp_write_back_Pipeline_write_back_fu_46_ap_idle),
    .ap_ready(grp_write_back_Pipeline_write_back_fu_46_ap_ready),
    .data_result_dout(data_result_dout),
    .data_result_num_data_valid(7'd0),
    .data_result_fifo_cap(7'd0),
    .data_result_empty_n(data_result_empty_n),
    .data_result_read(grp_write_back_Pipeline_write_back_fu_46_data_result_read),
    .m_axi_gmem2_AWVALID(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWVALID),
    .m_axi_gmem2_AWREADY(m_axi_gmem2_AWREADY),
    .m_axi_gmem2_AWADDR(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWADDR),
    .m_axi_gmem2_AWID(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWID),
    .m_axi_gmem2_AWLEN(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWLEN),
    .m_axi_gmem2_AWSIZE(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWSIZE),
    .m_axi_gmem2_AWBURST(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWBURST),
    .m_axi_gmem2_AWLOCK(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWLOCK),
    .m_axi_gmem2_AWCACHE(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWCACHE),
    .m_axi_gmem2_AWPROT(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWPROT),
    .m_axi_gmem2_AWQOS(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWQOS),
    .m_axi_gmem2_AWREGION(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWREGION),
    .m_axi_gmem2_AWUSER(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWUSER),
    .m_axi_gmem2_WVALID(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WVALID),
    .m_axi_gmem2_WREADY(m_axi_gmem2_WREADY),
    .m_axi_gmem2_WDATA(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WDATA),
    .m_axi_gmem2_WSTRB(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WSTRB),
    .m_axi_gmem2_WLAST(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WLAST),
    .m_axi_gmem2_WID(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WID),
    .m_axi_gmem2_WUSER(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WUSER),
    .m_axi_gmem2_ARVALID(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARVALID),
    .m_axi_gmem2_ARREADY(1'b0),
    .m_axi_gmem2_ARADDR(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARADDR),
    .m_axi_gmem2_ARID(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARID),
    .m_axi_gmem2_ARLEN(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARLEN),
    .m_axi_gmem2_ARSIZE(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARSIZE),
    .m_axi_gmem2_ARBURST(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARBURST),
    .m_axi_gmem2_ARLOCK(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARLOCK),
    .m_axi_gmem2_ARCACHE(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARCACHE),
    .m_axi_gmem2_ARPROT(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARPROT),
    .m_axi_gmem2_ARQOS(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARQOS),
    .m_axi_gmem2_ARREGION(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARREGION),
    .m_axi_gmem2_ARUSER(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_ARUSER),
    .m_axi_gmem2_RVALID(1'b0),
    .m_axi_gmem2_RREADY(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_RREADY),
    .m_axi_gmem2_RDATA(32'd0),
    .m_axi_gmem2_RLAST(1'b0),
    .m_axi_gmem2_RID(1'd0),
    .m_axi_gmem2_RFIFONUM(9'd0),
    .m_axi_gmem2_RUSER(1'd0),
    .m_axi_gmem2_RRESP(2'd0),
    .m_axi_gmem2_BVALID(m_axi_gmem2_BVALID),
    .m_axi_gmem2_BREADY(grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_BREADY),
    .m_axi_gmem2_BRESP(m_axi_gmem2_BRESP),
    .m_axi_gmem2_BID(m_axi_gmem2_BID),
    .m_axi_gmem2_BUSER(m_axi_gmem2_BUSER),
    .c_load(c_read_reg_55)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (grp_write_back_Pipeline_write_back_fu_46_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_write_back_Pipeline_write_back_fu_46_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_NS_fsm_state2))) begin
            grp_write_back_Pipeline_write_back_fu_46_ap_start_reg <= 1'b1;
        end else if ((grp_write_back_Pipeline_write_back_fu_46_ap_ready == 1'b1)) begin
            grp_write_back_Pipeline_write_back_fu_46_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        c_read_reg_55 <= c_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_write_back_Pipeline_write_back_fu_46_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_write_back_Pipeline_write_back_fu_46_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_write_back_Pipeline_write_back_fu_46_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_blk_n = c_empty_n;
    end else begin
        c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        c_read = 1'b1;
    end else begin
        c_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_result_read = grp_write_back_Pipeline_write_back_fu_46_data_result_read;
    end else begin
        data_result_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem2_AWVALID = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWVALID;
    end else begin
        m_axi_gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem2_BREADY = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_BREADY;
    end else begin
        m_axi_gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem2_WVALID = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WVALID;
    end else begin
        m_axi_gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_write_back_Pipeline_write_back_fu_46_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_NS_fsm_state2 = ap_NS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (c_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign grp_write_back_Pipeline_write_back_fu_46_ap_start = grp_write_back_Pipeline_write_back_fu_46_ap_start_reg;

assign m_axi_gmem2_ARADDR = 64'd0;

assign m_axi_gmem2_ARBURST = 2'd0;

assign m_axi_gmem2_ARCACHE = 4'd0;

assign m_axi_gmem2_ARID = 1'd0;

assign m_axi_gmem2_ARLEN = 32'd0;

assign m_axi_gmem2_ARLOCK = 2'd0;

assign m_axi_gmem2_ARPROT = 3'd0;

assign m_axi_gmem2_ARQOS = 4'd0;

assign m_axi_gmem2_ARREGION = 4'd0;

assign m_axi_gmem2_ARSIZE = 3'd0;

assign m_axi_gmem2_ARUSER = 1'd0;

assign m_axi_gmem2_ARVALID = 1'b0;

assign m_axi_gmem2_AWADDR = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWADDR;

assign m_axi_gmem2_AWBURST = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWBURST;

assign m_axi_gmem2_AWCACHE = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWCACHE;

assign m_axi_gmem2_AWID = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWID;

assign m_axi_gmem2_AWLEN = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWLEN;

assign m_axi_gmem2_AWLOCK = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWLOCK;

assign m_axi_gmem2_AWPROT = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWPROT;

assign m_axi_gmem2_AWQOS = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWQOS;

assign m_axi_gmem2_AWREGION = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWREGION;

assign m_axi_gmem2_AWSIZE = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWSIZE;

assign m_axi_gmem2_AWUSER = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_AWUSER;

assign m_axi_gmem2_RREADY = 1'b0;

assign m_axi_gmem2_WDATA = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WDATA;

assign m_axi_gmem2_WID = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WID;

assign m_axi_gmem2_WLAST = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WLAST;

assign m_axi_gmem2_WSTRB = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WSTRB;

assign m_axi_gmem2_WUSER = grp_write_back_Pipeline_write_back_fu_46_m_axi_gmem2_WUSER;

endmodule //alv_MIMD_write_back
