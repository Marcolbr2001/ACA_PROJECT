// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module ALU_sys_HDL_op_data_exe_wb_Pipeline_exe (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_a_dout,
        data_a_empty_n,
        data_a_read,
        data_b_dout,
        data_b_empty_n,
        data_b_read,
        data_result_din,
        data_result_full_n,
        data_result_write,
        ALU_operation_MEM_address0,
        ALU_operation_MEM_ce0,
        ALU_operation_MEM_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] data_a_dout;
input   data_a_empty_n;
output   data_a_read;
input  [31:0] data_b_dout;
input   data_b_empty_n;
output   data_b_read;
output  [31:0] data_result_din;
input   data_result_full_n;
output   data_result_write;
output  [6:0] ALU_operation_MEM_address0;
output   ALU_operation_MEM_ce0;
input  [31:0] ALU_operation_MEM_q0;

reg ap_idle;
reg data_a_read;
reg data_b_read;
reg[31:0] data_result_din;
reg data_result_write;
reg ALU_operation_MEM_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_idle_pp0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [31:0] ALU_operation_MEM_load_reg_167;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter37_reg;
reg    ap_predicate_op79_write_state6;
reg    ap_block_state6_pp0_stage0_iter38;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln127_fu_95_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_result_blk_n;
wire    ap_block_pp0_stage0;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter36_reg;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_pred218_state6;
reg    ap_predicate_pred225_state6;
reg    ap_predicate_pred230_state6;
reg    ap_predicate_pred235_state6;
reg    data_a_blk_n;
reg    data_b_blk_n;
reg   [6:0] i_reg_137;
reg  signed [31:0] a_reg_146;
reg  signed [31:0] a_reg_146_pp0_iter2_reg;
reg  signed [31:0] a_reg_146_pp0_iter3_reg;
reg  signed [31:0] a_reg_146_pp0_iter4_reg;
reg  signed [31:0] a_reg_146_pp0_iter5_reg;
reg  signed [31:0] a_reg_146_pp0_iter6_reg;
reg  signed [31:0] a_reg_146_pp0_iter7_reg;
reg  signed [31:0] a_reg_146_pp0_iter8_reg;
reg  signed [31:0] a_reg_146_pp0_iter9_reg;
reg  signed [31:0] a_reg_146_pp0_iter10_reg;
reg  signed [31:0] a_reg_146_pp0_iter11_reg;
reg  signed [31:0] a_reg_146_pp0_iter12_reg;
reg  signed [31:0] a_reg_146_pp0_iter13_reg;
reg  signed [31:0] a_reg_146_pp0_iter14_reg;
reg  signed [31:0] a_reg_146_pp0_iter15_reg;
reg  signed [31:0] a_reg_146_pp0_iter16_reg;
reg  signed [31:0] a_reg_146_pp0_iter17_reg;
reg  signed [31:0] a_reg_146_pp0_iter18_reg;
reg  signed [31:0] a_reg_146_pp0_iter19_reg;
reg  signed [31:0] a_reg_146_pp0_iter20_reg;
reg  signed [31:0] a_reg_146_pp0_iter21_reg;
reg  signed [31:0] a_reg_146_pp0_iter22_reg;
reg  signed [31:0] a_reg_146_pp0_iter23_reg;
reg  signed [31:0] a_reg_146_pp0_iter24_reg;
reg  signed [31:0] a_reg_146_pp0_iter25_reg;
reg  signed [31:0] a_reg_146_pp0_iter26_reg;
reg  signed [31:0] a_reg_146_pp0_iter27_reg;
reg  signed [31:0] a_reg_146_pp0_iter28_reg;
reg  signed [31:0] a_reg_146_pp0_iter29_reg;
reg  signed [31:0] a_reg_146_pp0_iter30_reg;
reg  signed [31:0] a_reg_146_pp0_iter31_reg;
reg  signed [31:0] a_reg_146_pp0_iter32_reg;
reg  signed [31:0] a_reg_146_pp0_iter33_reg;
reg  signed [31:0] a_reg_146_pp0_iter34_reg;
reg  signed [31:0] a_reg_146_pp0_iter35_reg;
reg  signed [31:0] a_reg_146_pp0_iter36_reg;
reg  signed [31:0] a_reg_146_pp0_iter37_reg;
reg  signed [31:0] b_reg_154;
reg  signed [31:0] b_reg_154_pp0_iter2_reg;
reg  signed [31:0] b_reg_154_pp0_iter3_reg;
reg  signed [31:0] b_reg_154_pp0_iter4_reg;
reg  signed [31:0] b_reg_154_pp0_iter5_reg;
reg  signed [31:0] b_reg_154_pp0_iter6_reg;
reg  signed [31:0] b_reg_154_pp0_iter7_reg;
reg  signed [31:0] b_reg_154_pp0_iter8_reg;
reg  signed [31:0] b_reg_154_pp0_iter9_reg;
reg  signed [31:0] b_reg_154_pp0_iter10_reg;
reg  signed [31:0] b_reg_154_pp0_iter11_reg;
reg  signed [31:0] b_reg_154_pp0_iter12_reg;
reg  signed [31:0] b_reg_154_pp0_iter13_reg;
reg  signed [31:0] b_reg_154_pp0_iter14_reg;
reg  signed [31:0] b_reg_154_pp0_iter15_reg;
reg  signed [31:0] b_reg_154_pp0_iter16_reg;
reg  signed [31:0] b_reg_154_pp0_iter17_reg;
reg  signed [31:0] b_reg_154_pp0_iter18_reg;
reg  signed [31:0] b_reg_154_pp0_iter19_reg;
reg  signed [31:0] b_reg_154_pp0_iter20_reg;
reg  signed [31:0] b_reg_154_pp0_iter21_reg;
reg  signed [31:0] b_reg_154_pp0_iter22_reg;
reg  signed [31:0] b_reg_154_pp0_iter23_reg;
reg  signed [31:0] b_reg_154_pp0_iter24_reg;
reg  signed [31:0] b_reg_154_pp0_iter25_reg;
reg  signed [31:0] b_reg_154_pp0_iter26_reg;
reg  signed [31:0] b_reg_154_pp0_iter27_reg;
reg  signed [31:0] b_reg_154_pp0_iter28_reg;
reg  signed [31:0] b_reg_154_pp0_iter29_reg;
reg  signed [31:0] b_reg_154_pp0_iter30_reg;
reg  signed [31:0] b_reg_154_pp0_iter31_reg;
reg  signed [31:0] b_reg_154_pp0_iter32_reg;
reg  signed [31:0] b_reg_154_pp0_iter33_reg;
reg  signed [31:0] b_reg_154_pp0_iter34_reg;
reg  signed [31:0] b_reg_154_pp0_iter35_reg;
reg  signed [31:0] b_reg_154_pp0_iter36_reg;
reg  signed [31:0] b_reg_154_pp0_iter37_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter3_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter4_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter5_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter6_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter7_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter8_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter9_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter10_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter11_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter12_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter13_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter14_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter15_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter16_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter17_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter18_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter19_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter20_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter21_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter22_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter23_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter24_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter25_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter26_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter27_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter28_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter29_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter30_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter31_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter32_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter33_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter34_reg;
reg   [31:0] ALU_operation_MEM_load_reg_167_pp0_iter35_reg;
wire   [31:0] grp_fu_83_p2;
reg   [31:0] mul_ln153_reg_171;
wire   [31:0] grp_fu_116_p2;
reg   [31:0] sdiv_ln148_reg_176;
wire   [63:0] zext_ln127_fu_112_p1;
reg   [6:0] i_5_fu_46;
wire   [6:0] add_ln127_fu_101_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] sub_ln144_fu_120_p2;
wire   [31:0] add_ln140_fu_125_p2;
reg    grp_fu_83_ce;
reg    grp_fu_116_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 i_5_fu_46 = 7'd0;
#0 ap_done_reg = 1'b0;
end

ALU_sys_HDL_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_reg_154_pp0_iter35_reg),
    .din1(a_reg_146_pp0_iter35_reg),
    .ce(grp_fu_83_ce),
    .dout(grp_fu_83_p2)
);

ALU_sys_HDL_sdiv_32s_32s_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sdiv_32s_32s_32_36_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_reg_146),
    .din1(b_reg_154),
    .ce(grp_fu_116_ce),
    .dout(grp_fu_116_p2)
);

ALU_sys_HDL_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter37_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln127_fu_95_p2 == 1'd0))) begin
            i_5_fu_46 <= add_ln127_fu_101_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_5_fu_46 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ALU_operation_MEM_load_reg_167 <= ALU_operation_MEM_q0;
        ALU_operation_MEM_load_reg_167_pp0_iter10_reg <= ALU_operation_MEM_load_reg_167_pp0_iter9_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter11_reg <= ALU_operation_MEM_load_reg_167_pp0_iter10_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter12_reg <= ALU_operation_MEM_load_reg_167_pp0_iter11_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter13_reg <= ALU_operation_MEM_load_reg_167_pp0_iter12_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter14_reg <= ALU_operation_MEM_load_reg_167_pp0_iter13_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter15_reg <= ALU_operation_MEM_load_reg_167_pp0_iter14_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter16_reg <= ALU_operation_MEM_load_reg_167_pp0_iter15_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter17_reg <= ALU_operation_MEM_load_reg_167_pp0_iter16_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter18_reg <= ALU_operation_MEM_load_reg_167_pp0_iter17_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter19_reg <= ALU_operation_MEM_load_reg_167_pp0_iter18_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter20_reg <= ALU_operation_MEM_load_reg_167_pp0_iter19_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter21_reg <= ALU_operation_MEM_load_reg_167_pp0_iter20_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter22_reg <= ALU_operation_MEM_load_reg_167_pp0_iter21_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter23_reg <= ALU_operation_MEM_load_reg_167_pp0_iter22_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter24_reg <= ALU_operation_MEM_load_reg_167_pp0_iter23_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter25_reg <= ALU_operation_MEM_load_reg_167_pp0_iter24_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter26_reg <= ALU_operation_MEM_load_reg_167_pp0_iter25_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter27_reg <= ALU_operation_MEM_load_reg_167_pp0_iter26_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter28_reg <= ALU_operation_MEM_load_reg_167_pp0_iter27_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter29_reg <= ALU_operation_MEM_load_reg_167_pp0_iter28_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter30_reg <= ALU_operation_MEM_load_reg_167_pp0_iter29_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter31_reg <= ALU_operation_MEM_load_reg_167_pp0_iter30_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter32_reg <= ALU_operation_MEM_load_reg_167_pp0_iter31_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter33_reg <= ALU_operation_MEM_load_reg_167_pp0_iter32_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter34_reg <= ALU_operation_MEM_load_reg_167_pp0_iter33_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter35_reg <= ALU_operation_MEM_load_reg_167_pp0_iter34_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter36_reg <= ALU_operation_MEM_load_reg_167_pp0_iter35_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter37_reg <= ALU_operation_MEM_load_reg_167_pp0_iter36_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter3_reg <= ALU_operation_MEM_load_reg_167;
        ALU_operation_MEM_load_reg_167_pp0_iter4_reg <= ALU_operation_MEM_load_reg_167_pp0_iter3_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter5_reg <= ALU_operation_MEM_load_reg_167_pp0_iter4_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter6_reg <= ALU_operation_MEM_load_reg_167_pp0_iter5_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter7_reg <= ALU_operation_MEM_load_reg_167_pp0_iter6_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter8_reg <= ALU_operation_MEM_load_reg_167_pp0_iter7_reg;
        ALU_operation_MEM_load_reg_167_pp0_iter9_reg <= ALU_operation_MEM_load_reg_167_pp0_iter8_reg;
        a_reg_146_pp0_iter10_reg <= a_reg_146_pp0_iter9_reg;
        a_reg_146_pp0_iter11_reg <= a_reg_146_pp0_iter10_reg;
        a_reg_146_pp0_iter12_reg <= a_reg_146_pp0_iter11_reg;
        a_reg_146_pp0_iter13_reg <= a_reg_146_pp0_iter12_reg;
        a_reg_146_pp0_iter14_reg <= a_reg_146_pp0_iter13_reg;
        a_reg_146_pp0_iter15_reg <= a_reg_146_pp0_iter14_reg;
        a_reg_146_pp0_iter16_reg <= a_reg_146_pp0_iter15_reg;
        a_reg_146_pp0_iter17_reg <= a_reg_146_pp0_iter16_reg;
        a_reg_146_pp0_iter18_reg <= a_reg_146_pp0_iter17_reg;
        a_reg_146_pp0_iter19_reg <= a_reg_146_pp0_iter18_reg;
        a_reg_146_pp0_iter20_reg <= a_reg_146_pp0_iter19_reg;
        a_reg_146_pp0_iter21_reg <= a_reg_146_pp0_iter20_reg;
        a_reg_146_pp0_iter22_reg <= a_reg_146_pp0_iter21_reg;
        a_reg_146_pp0_iter23_reg <= a_reg_146_pp0_iter22_reg;
        a_reg_146_pp0_iter24_reg <= a_reg_146_pp0_iter23_reg;
        a_reg_146_pp0_iter25_reg <= a_reg_146_pp0_iter24_reg;
        a_reg_146_pp0_iter26_reg <= a_reg_146_pp0_iter25_reg;
        a_reg_146_pp0_iter27_reg <= a_reg_146_pp0_iter26_reg;
        a_reg_146_pp0_iter28_reg <= a_reg_146_pp0_iter27_reg;
        a_reg_146_pp0_iter29_reg <= a_reg_146_pp0_iter28_reg;
        a_reg_146_pp0_iter2_reg <= a_reg_146;
        a_reg_146_pp0_iter30_reg <= a_reg_146_pp0_iter29_reg;
        a_reg_146_pp0_iter31_reg <= a_reg_146_pp0_iter30_reg;
        a_reg_146_pp0_iter32_reg <= a_reg_146_pp0_iter31_reg;
        a_reg_146_pp0_iter33_reg <= a_reg_146_pp0_iter32_reg;
        a_reg_146_pp0_iter34_reg <= a_reg_146_pp0_iter33_reg;
        a_reg_146_pp0_iter35_reg <= a_reg_146_pp0_iter34_reg;
        a_reg_146_pp0_iter36_reg <= a_reg_146_pp0_iter35_reg;
        a_reg_146_pp0_iter37_reg <= a_reg_146_pp0_iter36_reg;
        a_reg_146_pp0_iter3_reg <= a_reg_146_pp0_iter2_reg;
        a_reg_146_pp0_iter4_reg <= a_reg_146_pp0_iter3_reg;
        a_reg_146_pp0_iter5_reg <= a_reg_146_pp0_iter4_reg;
        a_reg_146_pp0_iter6_reg <= a_reg_146_pp0_iter5_reg;
        a_reg_146_pp0_iter7_reg <= a_reg_146_pp0_iter6_reg;
        a_reg_146_pp0_iter8_reg <= a_reg_146_pp0_iter7_reg;
        a_reg_146_pp0_iter9_reg <= a_reg_146_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        ap_predicate_pred218_state6 <= (32'd0 == ALU_operation_MEM_load_reg_167_pp0_iter36_reg);
        ap_predicate_pred225_state6 <= (32'd1 == ALU_operation_MEM_load_reg_167_pp0_iter36_reg);
        ap_predicate_pred230_state6 <= (32'd2 == ALU_operation_MEM_load_reg_167_pp0_iter36_reg);
        ap_predicate_pred235_state6 <= (32'd3 == ALU_operation_MEM_load_reg_167_pp0_iter36_reg);
        b_reg_154_pp0_iter10_reg <= b_reg_154_pp0_iter9_reg;
        b_reg_154_pp0_iter11_reg <= b_reg_154_pp0_iter10_reg;
        b_reg_154_pp0_iter12_reg <= b_reg_154_pp0_iter11_reg;
        b_reg_154_pp0_iter13_reg <= b_reg_154_pp0_iter12_reg;
        b_reg_154_pp0_iter14_reg <= b_reg_154_pp0_iter13_reg;
        b_reg_154_pp0_iter15_reg <= b_reg_154_pp0_iter14_reg;
        b_reg_154_pp0_iter16_reg <= b_reg_154_pp0_iter15_reg;
        b_reg_154_pp0_iter17_reg <= b_reg_154_pp0_iter16_reg;
        b_reg_154_pp0_iter18_reg <= b_reg_154_pp0_iter17_reg;
        b_reg_154_pp0_iter19_reg <= b_reg_154_pp0_iter18_reg;
        b_reg_154_pp0_iter20_reg <= b_reg_154_pp0_iter19_reg;
        b_reg_154_pp0_iter21_reg <= b_reg_154_pp0_iter20_reg;
        b_reg_154_pp0_iter22_reg <= b_reg_154_pp0_iter21_reg;
        b_reg_154_pp0_iter23_reg <= b_reg_154_pp0_iter22_reg;
        b_reg_154_pp0_iter24_reg <= b_reg_154_pp0_iter23_reg;
        b_reg_154_pp0_iter25_reg <= b_reg_154_pp0_iter24_reg;
        b_reg_154_pp0_iter26_reg <= b_reg_154_pp0_iter25_reg;
        b_reg_154_pp0_iter27_reg <= b_reg_154_pp0_iter26_reg;
        b_reg_154_pp0_iter28_reg <= b_reg_154_pp0_iter27_reg;
        b_reg_154_pp0_iter29_reg <= b_reg_154_pp0_iter28_reg;
        b_reg_154_pp0_iter2_reg <= b_reg_154;
        b_reg_154_pp0_iter30_reg <= b_reg_154_pp0_iter29_reg;
        b_reg_154_pp0_iter31_reg <= b_reg_154_pp0_iter30_reg;
        b_reg_154_pp0_iter32_reg <= b_reg_154_pp0_iter31_reg;
        b_reg_154_pp0_iter33_reg <= b_reg_154_pp0_iter32_reg;
        b_reg_154_pp0_iter34_reg <= b_reg_154_pp0_iter33_reg;
        b_reg_154_pp0_iter35_reg <= b_reg_154_pp0_iter34_reg;
        b_reg_154_pp0_iter36_reg <= b_reg_154_pp0_iter35_reg;
        b_reg_154_pp0_iter37_reg <= b_reg_154_pp0_iter36_reg;
        b_reg_154_pp0_iter3_reg <= b_reg_154_pp0_iter2_reg;
        b_reg_154_pp0_iter4_reg <= b_reg_154_pp0_iter3_reg;
        b_reg_154_pp0_iter5_reg <= b_reg_154_pp0_iter4_reg;
        b_reg_154_pp0_iter6_reg <= b_reg_154_pp0_iter5_reg;
        b_reg_154_pp0_iter7_reg <= b_reg_154_pp0_iter6_reg;
        b_reg_154_pp0_iter8_reg <= b_reg_154_pp0_iter7_reg;
        b_reg_154_pp0_iter9_reg <= b_reg_154_pp0_iter8_reg;
        mul_ln153_reg_171 <= grp_fu_83_p2;
        sdiv_ln148_reg_176 <= grp_fu_116_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_reg_146 <= data_a_dout;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        b_reg_154 <= data_b_dout;
        i_reg_137 <= ap_sig_allocacmp_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ALU_operation_MEM_ce0 = 1'b1;
    end else begin
        ALU_operation_MEM_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln127_fu_95_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter37_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) 
    & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 7'd0;
    end else begin
        ap_sig_allocacmp_i = i_5_fu_46;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_a_blk_n = data_a_empty_n;
    end else begin
        data_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_a_read = 1'b1;
    end else begin
        data_a_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_b_blk_n = data_b_empty_n;
    end else begin
        data_b_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_b_read = 1'b1;
    end else begin
        data_b_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_pred235_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_predicate_pred230_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_predicate_pred225_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_predicate_pred218_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op79_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter38 == 1'b1)))) begin
        data_result_blk_n = data_result_full_n;
    end else begin
        data_result_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        if ((ap_predicate_op79_write_state6 == 1'b1)) begin
            data_result_din = 32'd0;
        end else if ((ap_predicate_pred218_state6 == 1'b1)) begin
            data_result_din = add_ln140_fu_125_p2;
        end else if ((ap_predicate_pred225_state6 == 1'b1)) begin
            data_result_din = sub_ln144_fu_120_p2;
        end else if ((ap_predicate_pred230_state6 == 1'b1)) begin
            data_result_din = sdiv_ln148_reg_176;
        end else if ((ap_predicate_pred235_state6 == 1'b1)) begin
            data_result_din = mul_ln153_reg_171;
        end else begin
            data_result_din = 'bx;
        end
    end else begin
        data_result_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_pred235_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_predicate_pred230_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_predicate_pred225_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_predicate_pred218_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op79_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter38 == 1'b1)))) begin
        data_result_write = 1'b1;
    end else begin
        data_result_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_116_ce = 1'b1;
    end else begin
        grp_fu_116_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_83_ce = 1'b1;
    end else begin
        grp_fu_83_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ALU_operation_MEM_address0 = zext_ln127_fu_112_p1;

assign add_ln127_fu_101_p2 = (ap_sig_allocacmp_i + 7'd1);

assign add_ln140_fu_125_p2 = ($signed(b_reg_154_pp0_iter37_reg) + $signed(a_reg_146_pp0_iter37_reg));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b1 == ap_block_state6_pp0_stage0_iter38) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state6_pp0_stage0_iter38) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state6_pp0_stage0_iter38) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((data_b_empty_n == 1'b0) | (data_a_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter38 = (((ap_predicate_op79_write_state6 == 1'b1) & (data_result_full_n == 1'b0)) | ((32'd1 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg) & (data_result_full_n == 1'b0)) | ((32'd2 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg) & (data_result_full_n == 1'b0)) | ((32'd3 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg) & (data_result_full_n == 1'b0)) | ((data_result_full_n == 1'b0) & (32'd0 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op79_write_state6 = (~(32'd0 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg) & ~(32'd1 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg) & ~(32'd2 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg) & ~(32'd3 == ALU_operation_MEM_load_reg_167_pp0_iter37_reg));
end

assign icmp_ln127_fu_95_p2 = ((ap_sig_allocacmp_i == 7'd100) ? 1'b1 : 1'b0);

assign sub_ln144_fu_120_p2 = ($signed(a_reg_146_pp0_iter37_reg) - $signed(b_reg_154_pp0_iter37_reg));

assign zext_ln127_fu_112_p1 = i_reg_137;

endmodule //ALU_sys_HDL_op_data_exe_wb_Pipeline_exe
