

================================================================
== Vitis HLS Report for 'data_exe_wb_Pipeline_exe'
================================================================
* Date:           Sun Jun 23 13:22:51 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        ALU_sys_HDL
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      139|      139|  1.390 us|  1.390 us|  139|  139|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- exe     |      137|      137|        39|          1|          1|   100|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 39


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 39
* Pipeline : 1
  Pipeline-0 : II = 1, D = 39, States = { 1 2 3 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 7 
4 --> 5 
5 --> 6 
6 --> 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.04>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%i_8 = alloca i32 1" [core.cpp:127->core.cpp:179]   --->   Operation 42 'alloca' 'i_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_result, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 43 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_b, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 44 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_a, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 45 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln127 = store i7 0, i7 %i_8" [core.cpp:127->core.cpp:179]   --->   Operation 46 'store' 'store_ln127' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body.i.i"   --->   Operation 47 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%i = load i7 %i_8" [core.cpp:127->core.cpp:179]   --->   Operation 48 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (1.87ns)   --->   "%icmp_ln127 = icmp_eq  i7 %i, i7 100" [core.cpp:127->core.cpp:179]   --->   Operation 49 'icmp' 'icmp_ln127' <Predicate = true> <Delay = 1.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (1.87ns)   --->   "%add_ln127 = add i7 %i, i7 1" [core.cpp:127->core.cpp:179]   --->   Operation 50 'add' 'add_ln127' <Predicate = true> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln127 = br i1 %icmp_ln127, void %for.body.i.split.i, void %for.inc.i14.i.preheader.exitStub" [core.cpp:127->core.cpp:179]   --->   Operation 51 'br' 'br_ln127' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (1.58ns)   --->   "%store_ln127 = store i7 %add_ln127, i7 %i_8" [core.cpp:127->core.cpp:179]   --->   Operation 52 'store' 'store_ln127' <Predicate = (!icmp_ln127)> <Delay = 1.58>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln127 = br void %for.body.i.i" [core.cpp:127->core.cpp:179]   --->   Operation 53 'br' 'br_ln127' <Predicate = (!icmp_ln127)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.50>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln127 = zext i7 %i" [core.cpp:127->core.cpp:179]   --->   Operation 54 'zext' 'zext_ln127' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (3.50ns)   --->   "%a = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_a" [core.cpp:133->core.cpp:179]   --->   Operation 55 'read' 'a' <Predicate = true> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 100> <FIFO>
ST_2 : Operation 56 [1/1] (3.50ns)   --->   "%b = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %data_b" [core.cpp:134->core.cpp:179]   --->   Operation 56 'read' 'b' <Predicate = true> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 100> <FIFO>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%ALU_operation_MEM_addr = getelementptr i32 %ALU_operation_MEM, i64 0, i64 %zext_ln127" [core.cpp:136->core.cpp:179]   --->   Operation 57 'getelementptr' 'ALU_operation_MEM_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [2/2] (3.25ns)   --->   "%ALU_operation_MEM_load = load i7 %ALU_operation_MEM_addr" [core.cpp:136->core.cpp:179]   --->   Operation 58 'load' 'ALU_operation_MEM_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 5.49>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%specpipeline_ln129 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_20" [core.cpp:129->core.cpp:179]   --->   Operation 59 'specpipeline' 'specpipeline_ln129' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%speclooptripcount_ln127 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 100, i64 100, i64 100" [core.cpp:127->core.cpp:179]   --->   Operation 60 'speclooptripcount' 'speclooptripcount_ln127' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%specloopname_ln127 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [core.cpp:127->core.cpp:179]   --->   Operation 61 'specloopname' 'specloopname_ln127' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/2] (3.25ns)   --->   "%ALU_operation_MEM_load = load i7 %ALU_operation_MEM_addr" [core.cpp:136->core.cpp:179]   --->   Operation 62 'load' 'ALU_operation_MEM_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_3 : Operation 63 [1/1] (2.23ns)   --->   "%switch_ln136 = switch i32 %ALU_operation_MEM_load, void %sw.default.i.i, i32 0, void %sw.bb.i.i, i32 1, void %sw.bb2.i.i, i32 2, void %sw.bb4.i.i, i32 3, void %sw.bb6.i.i" [core.cpp:136->core.cpp:179]   --->   Operation 63 'switch' 'switch_ln136' <Predicate = true> <Delay = 2.23>
ST_3 : Operation 64 [36/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 64 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 36> <Delay = 6.91>
ST_4 : Operation 65 [2/2] (6.91ns)   --->   "%mul_ln153 = mul i32 %b, i32 %a" [core.cpp:153->core.cpp:179]   --->   Operation 65 'mul' 'mul_ln153' <Predicate = (ALU_operation_MEM_load == 3)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [2/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 66 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 37> <Delay = 6.91>
ST_5 : Operation 67 [1/2] (6.91ns)   --->   "%mul_ln153 = mul i32 %b, i32 %a" [core.cpp:153->core.cpp:179]   --->   Operation 67 'mul' 'mul_ln153' <Predicate = (ALU_operation_MEM_load == 3)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 68 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 114 'ret' 'ret_ln0' <Predicate = (icmp_ln127)> <Delay = 0.00>

State 6 <SV = 38> <Delay = 6.05>
ST_6 : Operation 69 [1/1] (3.50ns)   --->   "%write_ln153 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %mul_ln153" [core.cpp:153->core.cpp:179]   --->   Operation 69 'write' 'write_ln153' <Predicate = (ALU_operation_MEM_load == 3)> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 100> <FIFO>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln154 = br void %for.inc.i9.i" [core.cpp:154->core.cpp:179]   --->   Operation 70 'br' 'br_ln154' <Predicate = (ALU_operation_MEM_load == 3)> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (3.50ns)   --->   "%write_ln148 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %sdiv_ln148" [core.cpp:148->core.cpp:179]   --->   Operation 71 'write' 'write_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 100> <FIFO>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln150 = br void %for.inc.i9.i" [core.cpp:150->core.cpp:179]   --->   Operation 72 'br' 'br_ln150' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (2.55ns)   --->   "%sub_ln144 = sub i32 %a, i32 %b" [core.cpp:144->core.cpp:179]   --->   Operation 73 'sub' 'sub_ln144' <Predicate = (ALU_operation_MEM_load == 1)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (3.50ns)   --->   "%write_ln144 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %sub_ln144" [core.cpp:144->core.cpp:179]   --->   Operation 74 'write' 'write_ln144' <Predicate = (ALU_operation_MEM_load == 1)> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 100> <FIFO>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln145 = br void %for.inc.i9.i" [core.cpp:145->core.cpp:179]   --->   Operation 75 'br' 'br_ln145' <Predicate = (ALU_operation_MEM_load == 1)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (2.55ns)   --->   "%add_ln140 = add i32 %b, i32 %a" [core.cpp:140->core.cpp:179]   --->   Operation 76 'add' 'add_ln140' <Predicate = (ALU_operation_MEM_load == 0)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (3.50ns)   --->   "%write_ln140 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 %add_ln140" [core.cpp:140->core.cpp:179]   --->   Operation 77 'write' 'write_ln140' <Predicate = (ALU_operation_MEM_load == 0)> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 100> <FIFO>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln141 = br void %for.inc.i9.i" [core.cpp:141->core.cpp:179]   --->   Operation 78 'br' 'br_ln141' <Predicate = (ALU_operation_MEM_load == 0)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (3.50ns)   --->   "%write_ln158 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %data_result, i32 0" [core.cpp:158->core.cpp:179]   --->   Operation 79 'write' 'write_ln158' <Predicate = (ALU_operation_MEM_load != 0 & ALU_operation_MEM_load != 1 & ALU_operation_MEM_load != 2 & ALU_operation_MEM_load != 3)> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 100> <FIFO>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln160 = br void %for.inc.i9.i" [core.cpp:160->core.cpp:179]   --->   Operation 80 'br' 'br_ln160' <Predicate = (ALU_operation_MEM_load != 0 & ALU_operation_MEM_load != 1 & ALU_operation_MEM_load != 2 & ALU_operation_MEM_load != 3)> <Delay = 0.00>

State 7 <SV = 3> <Delay = 4.33>
ST_7 : Operation 81 [35/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 81 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 4> <Delay = 4.33>
ST_8 : Operation 82 [34/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 82 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 5> <Delay = 4.33>
ST_9 : Operation 83 [33/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 83 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 6> <Delay = 4.33>
ST_10 : Operation 84 [32/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 84 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 7> <Delay = 4.33>
ST_11 : Operation 85 [31/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 85 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 8> <Delay = 4.33>
ST_12 : Operation 86 [30/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 86 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 9> <Delay = 4.33>
ST_13 : Operation 87 [29/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 87 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 10> <Delay = 4.33>
ST_14 : Operation 88 [28/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 88 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 11> <Delay = 4.33>
ST_15 : Operation 89 [27/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 89 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 12> <Delay = 4.33>
ST_16 : Operation 90 [26/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 90 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 13> <Delay = 4.33>
ST_17 : Operation 91 [25/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 91 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 14> <Delay = 4.33>
ST_18 : Operation 92 [24/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 92 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 15> <Delay = 4.33>
ST_19 : Operation 93 [23/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 93 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 16> <Delay = 4.33>
ST_20 : Operation 94 [22/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 94 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 17> <Delay = 4.33>
ST_21 : Operation 95 [21/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 95 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 18> <Delay = 4.33>
ST_22 : Operation 96 [20/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 96 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 19> <Delay = 4.33>
ST_23 : Operation 97 [19/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 97 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 20> <Delay = 4.33>
ST_24 : Operation 98 [18/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 98 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 21> <Delay = 4.33>
ST_25 : Operation 99 [17/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 99 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 22> <Delay = 4.33>
ST_26 : Operation 100 [16/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 100 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 23> <Delay = 4.33>
ST_27 : Operation 101 [15/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 101 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 24> <Delay = 4.33>
ST_28 : Operation 102 [14/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 102 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 25> <Delay = 4.33>
ST_29 : Operation 103 [13/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 103 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 26> <Delay = 4.33>
ST_30 : Operation 104 [12/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 104 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 27> <Delay = 4.33>
ST_31 : Operation 105 [11/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 105 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 28> <Delay = 4.33>
ST_32 : Operation 106 [10/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 106 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 29> <Delay = 4.33>
ST_33 : Operation 107 [9/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 107 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 30> <Delay = 4.33>
ST_34 : Operation 108 [8/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 108 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 31> <Delay = 4.33>
ST_35 : Operation 109 [7/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 109 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 32> <Delay = 4.33>
ST_36 : Operation 110 [6/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 110 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 33> <Delay = 4.33>
ST_37 : Operation 111 [5/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 111 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 34> <Delay = 4.33>
ST_38 : Operation 112 [4/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 112 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 35> <Delay = 4.33>
ST_39 : Operation 113 [3/36] (4.33ns)   --->   "%sdiv_ln148 = sdiv i32 %a, i32 %b" [core.cpp:148->core.cpp:179]   --->   Operation 113 'sdiv' 'sdiv_ln148' <Predicate = (ALU_operation_MEM_load == 2)> <Delay = 4.33> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 35> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.046ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln127', core.cpp:127->core.cpp:179) of constant 0 on local variable 'i', core.cpp:127->core.cpp:179 [9]  (1.588 ns)
	'load' operation 7 bit ('i', core.cpp:127->core.cpp:179) on local variable 'i', core.cpp:127->core.cpp:179 [12]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln127', core.cpp:127->core.cpp:179) [13]  (1.870 ns)
	'store' operation 0 bit ('store_ln127', core.cpp:127->core.cpp:179) of variable 'add_ln127', core.cpp:127->core.cpp:179 on local variable 'i', core.cpp:127->core.cpp:179 [46]  (1.588 ns)

 <State 2>: 3.506ns
The critical path consists of the following:
	fifo read operation ('a', core.cpp:133->core.cpp:179) on port 'data_a' (core.cpp:133->core.cpp:179) [21]  (3.506 ns)

 <State 3>: 5.490ns
The critical path consists of the following:
	'load' operation 32 bit ('ALU_operation_MEM_load', core.cpp:136->core.cpp:179) on array 'ALU_operation_MEM' [24]  (3.254 ns)
	blocking operation 2.2365 ns on control path)

 <State 4>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln153', core.cpp:153->core.cpp:179) [27]  (6.912 ns)

 <State 5>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln153', core.cpp:153->core.cpp:179) [27]  (6.912 ns)

 <State 6>: 6.058ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln140', core.cpp:140->core.cpp:179) [39]  (2.552 ns)
	fifo write operation ('write_ln140', core.cpp:140->core.cpp:179) on port 'data_result' (core.cpp:140->core.cpp:179) [40]  (3.506 ns)

 <State 7>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 8>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 9>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 10>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 11>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 12>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 13>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 14>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 15>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 16>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 17>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 18>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 19>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 20>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 21>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 22>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 23>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 24>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 25>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 26>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 27>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 28>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 29>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 30>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 31>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 32>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 33>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 34>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 35>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 36>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 37>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 38>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)

 <State 39>: 4.336ns
The critical path consists of the following:
	'sdiv' operation 32 bit ('sdiv_ln148', core.cpp:148->core.cpp:179) [31]  (4.336 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
