================================================================
== Design Size Report
================================================================

* Total Instructions per Compilation Phase
+---------------+-----------------------------+--------------+----------------------------------------------------------------------------------------+
| Phase         | Step                        | Instructions | Description                                                                            |
+---------------+-----------------------------+--------------+----------------------------------------------------------------------------------------+
| Compile/Link  |                             | 792          | After all functions are compiled and linked into a single design                       |
|               |                             |              |                                                                                        |
| Unroll/Inline |                             |              | After user unroll and inline pragmas are applied                                       |
|               | (1) unroll                  | 326          | user unroll pragmas are applied                                                        |
|               | (2) simplification          | 297          | simplification of applied user unroll pragmas                                          |
|               | (3) inline                  | 232          | user inline pragmas are applied                                                        |
|               | (4) simplification          | 232          | simplification of applied user inline pragmas                                          |
|               |                             |              |                                                                                        |
| Array/Struct  |                             |              | After user array partition and struct aggregate/disaggregate pragmas are applied       |
|               | (1) array partition         | 222          | user array partition pragmas are applied                                               |
|               | (2) simplification          | 222          | simplification of applied user array partition & struct aggregate/disaggregate pragmas |
|               | (3) aggregate/disaggregate  | 222          | user struct aggregate/disaggregate pragmas are applied                                 |
|               | (4) array reshape           | 222          | apply array reshape pragmas                                                            |
|               | (5) access patterns         | 222          | array access pattern optmizations                                                      |
|               |                             |              |                                                                                        |
| Performance   |                             |              | After transformations are applied to meet performance pragma targets                   |
|               | (1) loop simplification     | 222          | loop and instruction simplification                                                    |
|               | (2) parallelization         | 222          | loops are unrolled or pipelined to meet performance targets                            |
|               | (3) array partition         | 222          | arrays are partitioned to meet performance targets                                     |
|               | (4) simplification          | 222          | simplification of design after performance transformations                             |
|               |                             |              |                                                                                        |
| HW Transforms |                             |              | After hardware transfomations                                                          |
|               | (1) lowering                | 256          | initial conversion to HW specific instructions                                         |
|               | (2) optimizations           | 392          | high level synthesis optimizations                                                     |
+---------------+-----------------------------+--------------+----------------------------------------------------------------------------------------+

* Instructions per Function for each Compilation Phase
+-------------------------+--------------+--------------+---------------+--------------+-------------+---------------+
| Function                | Location     | Compile/Link | Unroll/Inline | Array/Struct | Performance | HW Transforms |
+-------------------------+--------------+--------------+---------------+--------------+-------------+---------------+
| + alv_VHDL              | core.cpp:222 | 792          | 232           | 222          | 222         | 392           |
|  + operation            | core.cpp:111 |  53          |  17           |  17          |  17         |  32           |
|     load_op             | core.cpp:85  |  24          |               |              |             |               |
|     store_op            | core.cpp:98  |  26          |               |              |             |               |
|  + data_exe_wb          | core.cpp:206 | 261          |  67           |  67          |  67         | 124           |
|     load_data_a         | core.cpp:61  |  24          |               |              |             |               |
|     load_data_b         | core.cpp:72  |  24          |               |              |             |               |
|     execute             | core.cpp:131 | 182          |               |              |             |               |
|     write_back          | core.cpp:195 |  26          |               |              |             |               |
|  + op_data_exe_wb       | core.cpp:214 | 315          |  83           |  83          |  83         | 155           |
|   + load_data_and_op    | core.cpp:120 |  76          |               |              |             |               |
|      load_op            | core.cpp:85  |  24          |               |              |             |               |
|      load_data_a        | core.cpp:61  |  24          |               |              |             |               |
|      load_data_b        | core.cpp:72  |  24          |               |              |             |               |
|     store_op            | core.cpp:98  |  26          |               |              |             |               |
|     execute             | core.cpp:131 | 182          |               |              |             |               |
|     write_back          | core.cpp:195 |  26          |               |              |             |               |
|  + reset                | core.cpp:47  |  90          |  23           |  23          |  23         |  36           |
|     reset_FIFO_a        | core.cpp:12  |  24          |               |              |             |               |
|     reset_FIFO_b        | core.cpp:21  |  24          |               |              |             |               |
|     reset_ALU_operation | core.cpp:30  |  24          |               |              |             |               |
|     clear_RAM_op        | core.cpp:39  |  13          |               |              |             |               |
+-------------------------+--------------+--------------+---------------+--------------+-------------+---------------+

* Design Size Message Settings
+---------------------------------------------+--------+------------------------------------------------------------------+
| Message Setting                             | Value  | Description                                                      |
+---------------------------------------------+--------+------------------------------------------------------------------+
| config_compile -design_size_maximum_warning | 100000 | Show a warning when total design instructions exceeds this value |
+---------------------------------------------+--------+------------------------------------------------------------------+


