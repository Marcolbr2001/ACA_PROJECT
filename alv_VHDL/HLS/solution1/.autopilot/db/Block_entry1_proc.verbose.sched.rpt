

================================================================
== Vitis HLS Report for 'Block_entry1_proc'
================================================================
* Date:           Sun Jun  9 09:50:15 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        alv_VHDL
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.23>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_result, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 3 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_b, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_a, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 5 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %ALU_operation, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem3, void @empty_19, i32 0, i32 0, void @empty_20, i32 0, i32 50, void @empty_25, void @empty_22, void @empty_20, i32 16, i32 16, i32 16, i32 16, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem2, void @empty_19, i32 0, i32 0, void @empty_20, i32 0, i32 50, void @empty_24, void @empty_22, void @empty_20, i32 16, i32 16, i32 16, i32 16, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem1, void @empty_19, i32 0, i32 0, void @empty_20, i32 0, i32 50, void @empty_23, void @empty_22, void @empty_20, i32 16, i32 16, i32 16, i32 16, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem0, void @empty_19, i32 0, i32 0, void @empty_20, i32 0, i32 50, void @empty_21, void @empty_22, void @empty_20, i32 16, i32 16, i32 16, i32 16, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty = specchannel i32 @_ssdm_op_SpecChannel, void @ALU_operation_str, i32 1, void @p_str, void @p_str, i32 50, i32 50, i32 %ALU_operation, i32 %ALU_operation"   --->   Operation 11 'specchannel' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_64 = specchannel i32 @_ssdm_op_SpecChannel, void @data_a_str, i32 1, void @p_str, void @p_str, i32 50, i32 50, i32 %data_a, i32 %data_a"   --->   Operation 12 'specchannel' 'empty_64' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty_65 = specchannel i32 @_ssdm_op_SpecChannel, void @data_b_str, i32 1, void @p_str, void @p_str, i32 50, i32 50, i32 %data_b, i32 %data_b"   --->   Operation 13 'specchannel' 'empty_65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_66 = specchannel i32 @_ssdm_op_SpecChannel, void @data_result_str, i32 1, void @p_str, void @p_str, i32 50, i32 50, i32 %data_result, i32 %data_result"   --->   Operation 14 'specchannel' 'empty_66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%c_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %c" [core.cpp:258]   --->   Operation 15 'read' 'c_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%b_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %b" [core.cpp:258]   --->   Operation 16 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%a_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %a" [core.cpp:258]   --->   Operation 17 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%op_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %op" [core.cpp:258]   --->   Operation 18 'read' 'op_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%selec_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %selec" [core.cpp:258]   --->   Operation 19 'read' 'selec_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (2.23ns)   --->   "%switch_ln258 = switch i32 %selec_read, void %sw.default, i32 0, void %sw.bb, i32 1, void %sw.bb10, i32 2, void %sw.bb11" [core.cpp:258]   --->   Operation 20 'switch' 'switch_ln258' <Predicate = true> <Delay = 2.23>
ST_1 : Operation 21 [2/2] (0.00ns)   --->   "%call_ln275 = call void @op_data_exe_wb, i32 %gmem0, i64 %a_read, i32 %gmem1, i64 %b_read, i32 %gmem3, i64 %op_read, i32 %gmem2, i64 %c_read, i32 %ALU_operation_MEM, i32 %ALU_operation, i32 %data_a, i32 %data_b, i32 %data_result" [core.cpp:275]   --->   Operation 21 'call' 'call_ln275' <Predicate = (selec_read == 2)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 22 [2/2] (0.00ns)   --->   "%call_ln269 = call void @data_exe_wb, i32 %gmem0, i64 %a_read, i32 %gmem1, i64 %b_read, i32 %gmem2, i64 %c_read, i32 %ALU_operation_MEM, i32 %data_a, i32 %data_b, i32 %data_result" [core.cpp:269]   --->   Operation 22 'call' 'call_ln269' <Predicate = (selec_read == 1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 23 [2/2] (0.00ns)   --->   "%call_ln263 = call void @operation, i32 %gmem3, i64 %op_read, i32 %ALU_operation_MEM, i32 %ALU_operation" [core.cpp:263]   --->   Operation 23 'call' 'call_ln263' <Predicate = (selec_read == 0)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 24 [2/2] (0.00ns)   --->   "%call_ln281 = call void @reset, i32 %data_a, i32 %data_b, i32 %ALU_operation, i32 %ALU_operation_MEM" [core.cpp:281]   --->   Operation 24 'call' 'call_ln281' <Predicate = (selec_read != 0 & selec_read != 1 & selec_read != 2)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 25 [1/2] (0.00ns)   --->   "%call_ln275 = call void @op_data_exe_wb, i32 %gmem0, i64 %a_read, i32 %gmem1, i64 %b_read, i32 %gmem3, i64 %op_read, i32 %gmem2, i64 %c_read, i32 %ALU_operation_MEM, i32 %ALU_operation, i32 %data_a, i32 %data_b, i32 %data_result" [core.cpp:275]   --->   Operation 25 'call' 'call_ln275' <Predicate = (selec_read == 2)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln277 = br void %sw.epilog" [core.cpp:277]   --->   Operation 26 'br' 'br_ln277' <Predicate = (selec_read == 2)> <Delay = 0.00>
ST_2 : Operation 27 [1/2] (0.00ns)   --->   "%call_ln269 = call void @data_exe_wb, i32 %gmem0, i64 %a_read, i32 %gmem1, i64 %b_read, i32 %gmem2, i64 %c_read, i32 %ALU_operation_MEM, i32 %data_a, i32 %data_b, i32 %data_result" [core.cpp:269]   --->   Operation 27 'call' 'call_ln269' <Predicate = (selec_read == 1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln271 = br void %sw.epilog" [core.cpp:271]   --->   Operation 28 'br' 'br_ln271' <Predicate = (selec_read == 1)> <Delay = 0.00>
ST_2 : Operation 29 [1/2] (0.00ns)   --->   "%call_ln263 = call void @operation, i32 %gmem3, i64 %op_read, i32 %ALU_operation_MEM, i32 %ALU_operation" [core.cpp:263]   --->   Operation 29 'call' 'call_ln263' <Predicate = (selec_read == 0)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln265 = br void %sw.epilog" [core.cpp:265]   --->   Operation 30 'br' 'br_ln265' <Predicate = (selec_read == 0)> <Delay = 0.00>
ST_2 : Operation 31 [1/2] (0.00ns)   --->   "%call_ln281 = call void @reset, i32 %data_a, i32 %data_b, i32 %ALU_operation, i32 %ALU_operation_MEM" [core.cpp:281]   --->   Operation 31 'call' 'call_ln281' <Predicate = (selec_read != 0 & selec_read != 1 & selec_read != 2)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln283 = br void %sw.epilog" [core.cpp:283]   --->   Operation 32 'br' 'br_ln283' <Predicate = (selec_read != 0 & selec_read != 1 & selec_read != 2)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 33 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.236ns
The critical path consists of the following:
	wire read operation ('selec_read', core.cpp:258) on port 'selec' (core.cpp:258) [31]  (0.000 ns)
	'call' operation 0 bit ('call_ln275', core.cpp:275) to 'op_data_exe_wb' [34]  (0.000 ns)
	blocking operation 2.2365 ns on control path)

 <State 2>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
