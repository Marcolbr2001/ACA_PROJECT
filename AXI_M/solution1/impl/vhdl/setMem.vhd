-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity setMem is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of setMem is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "setMem_setMem,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=177,HLS_SYN_TPT=none,HLS_SYN_MEM=15,HLS_SYN_DSP=0,HLS_SYN_FF=3437,HLS_SYN_LUT=3566,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal a : STD_LOGIC_VECTOR (63 downto 0);
    signal b : STD_LOGIC_VECTOR (63 downto 0);
    signal c : STD_LOGIC_VECTOR (63 downto 0);
    signal op : STD_LOGIC_VECTOR (31 downto 0);
    signal c_read_reg_146 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_read_reg_151 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_read_reg_156 : STD_LOGIC_VECTOR (63 downto 0);
    signal cmp13_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp13_reg_161 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_a_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_a_ce0 : STD_LOGIC;
    signal data_a_we0 : STD_LOGIC;
    signal data_a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_b_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_b_ce0 : STD_LOGIC;
    signal data_b_we0 : STD_LOGIC;
    signal data_b_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_result_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_result_ce0 : STD_LOGIC;
    signal data_result_we0 : STD_LOGIC;
    signal data_result_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_done : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_idle : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_ready : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_ce0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_we0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_ce0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_we0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_done : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_idle : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_ready : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_ce0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_ce0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_ce0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_we0 : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_idle : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_ready : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WLAST : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_RREADY : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_BREADY : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_ce0 : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem2_AWVALID : STD_LOGIC;
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WVALID : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BREADY : STD_LOGIC;
    signal grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component setMem_setMem_Pipeline_VITIS_LOOP_31_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        data_a_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_a_ce0 : OUT STD_LOGIC;
        data_a_we0 : OUT STD_LOGIC;
        data_a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0);
        data_b_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_b_ce0 : OUT STD_LOGIC;
        data_b_we0 : OUT STD_LOGIC;
        data_b_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component setMem_setMem_Pipeline_VITIS_LOOP_43_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_a_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_a_ce0 : OUT STD_LOGIC;
        data_a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_b_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_b_ce0 : OUT STD_LOGIC;
        data_b_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_result_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_result_ce0 : OUT STD_LOGIC;
        data_result_we0 : OUT STD_LOGIC;
        data_result_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cmp13 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component setMem_setMem_Pipeline_VITIS_LOOP_58_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        data_result_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_result_ce0 : OUT STD_LOGIC;
        data_result_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        c : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component setMem_data_a_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component setMem_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        a : OUT STD_LOGIC_VECTOR (63 downto 0);
        b : OUT STD_LOGIC_VECTOR (63 downto 0);
        c : OUT STD_LOGIC_VECTOR (63 downto 0);
        op : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component setMem_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component setMem_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component setMem_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    data_a_U : component setMem_data_a_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_a_address0,
        ce0 => data_a_ce0,
        we0 => data_a_we0,
        d0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_d0,
        q0 => data_a_q0);

    data_b_U : component setMem_data_a_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_b_address0,
        ce0 => data_b_ce0,
        we0 => data_b_we0,
        d0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_d0,
        q0 => data_b_q0);

    data_result_U : component setMem_data_a_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_result_address0,
        ce0 => data_result_ce0,
        we0 => data_result_we0,
        d0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_d0,
        q0 => data_result_q0);

    grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108 : component setMem_setMem_Pipeline_VITIS_LOOP_31_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start,
        ap_done => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_done,
        ap_idle => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_idle,
        ap_ready => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_ready,
        m_axi_gmem0_AWVALID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        m_axi_gmem1_AWVALID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RFIFONUM => gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        a => a_read_reg_156,
        data_a_address0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_address0,
        data_a_ce0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_ce0,
        data_a_we0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_we0,
        data_a_d0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_d0,
        b => b_read_reg_151,
        data_b_address0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_address0,
        data_b_ce0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_ce0,
        data_b_we0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_we0,
        data_b_d0 => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_d0);

    grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124 : component setMem_setMem_Pipeline_VITIS_LOOP_43_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start,
        ap_done => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_done,
        ap_idle => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_idle,
        ap_ready => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_ready,
        data_a_address0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_address0,
        data_a_ce0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_ce0,
        data_a_q0 => data_a_q0,
        data_b_address0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_address0,
        data_b_ce0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_ce0,
        data_b_q0 => data_b_q0,
        data_result_address0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_address0,
        data_result_ce0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_ce0,
        data_result_we0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_we0,
        data_result_d0 => grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_d0,
        cmp13 => cmp13_reg_161);

    grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132 : component setMem_setMem_Pipeline_VITIS_LOOP_58_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start,
        ap_done => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done,
        ap_idle => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_idle,
        ap_ready => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_ready,
        m_axi_gmem2_AWVALID => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => gmem2_AWREADY,
        m_axi_gmem2_AWADDR => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => gmem2_WREADY,
        m_axi_gmem2_WDATA => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv32_0,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => gmem2_BVALID,
        m_axi_gmem2_BREADY => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => ap_const_lv2_0,
        m_axi_gmem2_BID => ap_const_lv1_0,
        m_axi_gmem2_BUSER => ap_const_lv1_0,
        data_result_address0 => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_address0,
        data_result_ce0 => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_ce0,
        data_result_q0 => data_result_q0,
        c => c_read_reg_146);

    control_s_axi_U : component setMem_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        a => a,
        b => b,
        c => c,
        op => op,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component setMem_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARADDR,
        I_ARLEN => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem0_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem0_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem1_m_axi_U : component setMem_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARADDR,
        I_ARLEN => grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARLEN,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RFIFONUM => gmem1_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem1_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem1_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem2_m_axi_U : component setMem_gmem2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 4,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARLEN => ap_const_lv32_0,
        I_RVALID => gmem2_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem2_RDATA,
        I_RFIFONUM => gmem2_RFIFONUM,
        I_AWVALID => gmem2_AWVALID,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWADDR,
        I_AWLEN => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWLEN,
        I_WVALID => gmem2_WVALID,
        I_WREADY => gmem2_WREADY,
        I_WDATA => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WDATA,
        I_WSTRB => grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WSTRB,
        I_BVALID => gmem2_BVALID,
        I_BREADY => gmem2_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_ready = ap_const_logic_1)) then 
                    grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_ready = ap_const_logic_1)) then 
                    grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_ready = ap_const_logic_1)) then 
                    grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                a_read_reg_156 <= a;
                b_read_reg_151 <= b;
                c_read_reg_146 <= c;
                cmp13_reg_161 <= cmp13_fu_140_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_done, grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_done, grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_done)
    begin
        if ((grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_done)
    begin
        if ((grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done)
    begin
        if ((grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cmp13_fu_140_p2 <= "1" when (op = ap_const_lv32_1) else "0";

    data_a_address0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_address0, grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_a_address0 <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_a_address0 <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_address0;
        else 
            data_a_address0 <= "XXXXXX";
        end if; 
    end process;


    data_a_ce0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_ce0, grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_a_ce0 <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_a_ce0 <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_ce0;
        else 
            data_a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_a_we0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_a_we0 <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_a_we0;
        else 
            data_a_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_b_address0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_address0, grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_b_address0 <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_b_address0 <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_address0;
        else 
            data_b_address0 <= "XXXXXX";
        end if; 
    end process;


    data_b_ce0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_ce0, grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_b_ce0 <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_b_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_b_ce0 <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_ce0;
        else 
            data_b_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_b_we0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_b_we0 <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_data_b_we0;
        else 
            data_b_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_result_address0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_address0, grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_result_address0 <= grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_result_address0 <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_address0;
        else 
            data_result_address0 <= "XXXXXX";
        end if; 
    end process;


    data_result_ce0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_ce0, grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_result_ce0 <= grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_data_result_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_result_ce0 <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_ce0;
        else 
            data_result_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_result_we0_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_result_we0 <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_data_result_we0;
        else 
            data_result_we0 <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem0_ARVALID <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem0_RREADY <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARVALID <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_ARVALID;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_RREADY <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_m_axi_gmem1_RREADY;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_AWVALID_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWVALID, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem2_AWVALID <= grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_AWVALID;
        else 
            gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_BREADY_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_BREADY, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem2_BREADY <= grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_BREADY;
        else 
            gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_WVALID_assign_proc : process(grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WVALID, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem2_WVALID <= grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_m_axi_gmem2_WVALID;
        else 
            gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start <= grp_setMem_Pipeline_VITIS_LOOP_31_1_fu_108_ap_start_reg;
    grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start <= grp_setMem_Pipeline_VITIS_LOOP_43_2_fu_124_ap_start_reg;
    grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start <= grp_setMem_Pipeline_VITIS_LOOP_58_3_fu_132_ap_start_reg;
end behav;
