

================================================================
== Vitis HLS Report for 'reset_Pipeline_clear_ALU_op'
================================================================
* Date:           Sun Jun  9 09:50:15 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        alv_VHDL
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.581 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- clear_ALU_op  |        ?|        ?|         1|          1|          1|     ?|       yes|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.58>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %ALU_operation, void @empty_16, i32 0, i32 0, void @empty_20, i32 0, i32 0, void @empty_20, void @empty_20, void @empty_20, i32 0, i32 0, i32 0, i32 0, void @empty_20, void @empty_20, i32 4294967295, i32 0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.cond.i3.i"   --->   Operation 5 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%tmp_2_i = nbreadreq i1 @_ssdm_op_NbReadReq.ap_fifo.i32P0A, i32 %ALU_operation, i32 1" [core.cpp:32->core.cpp:54]   --->   Operation 6 'nbreadreq' 'tmp_2_i' <Predicate = true> <Delay = 0.00> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.58> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 50> <FIFO>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %tmp_2_i, void %for.inc.i.i.preheader.exitStub, void %while.body.i4.i" [core.cpp:32->core.cpp:54]   --->   Operation 7 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specpipeline_ln35 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_20" [core.cpp:35->core.cpp:54]   --->   Operation 8 'specpipeline' 'specpipeline_ln35' <Predicate = (tmp_2_i)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specloopname_ln32 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [core.cpp:32->core.cpp:54]   --->   Operation 9 'specloopname' 'specloopname_ln32' <Predicate = (tmp_2_i)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (3.58ns)   --->   "%p_0 = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %ALU_operation" [core.cpp:35->core.cpp:54]   --->   Operation 10 'read' 'p_0' <Predicate = (tmp_2_i)> <Delay = 3.58> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.58> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 50> <FIFO>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln32 = br void %while.cond.i3.i" [core.cpp:32->core.cpp:54]   --->   Operation 11 'br' 'br_ln32' <Predicate = (tmp_2_i)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 12 'ret' 'ret_ln0' <Predicate = (!tmp_2_i)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.581ns
The critical path consists of the following:
	fifo request operation ('tmp_2_i', core.cpp:32->core.cpp:54) on port 'ALU_operation' (core.cpp:32->core.cpp:54) [5]  (0.000 ns)
	fifo read operation ('p_0', core.cpp:35->core.cpp:54) on port 'ALU_operation' (core.cpp:35->core.cpp:54) [10]  (3.581 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
